This file details the new (currently being implemented) isolation criteria. 
The algorithm will be slightly different for pairs and triplets, so both 
will be described below.

## Priors:
1.  MW and M31 are both host halos.
2.  MW, M31 (and M33) are all well-resolved in the simulation.
3.  The distance between MW and M31 is less than 1 Mpc (~ 5-sigma larger than
the true value D=0.77 +/- 0.04).
4.  Within 2 Mpc of the midpint of the MW-M31 pair, MW and M31 are the two
largest halos.

## Algorithm:
1.  Cut the catalog at a proper resolution limit.
2.  Select all host halos, from which identify all MW-M31 pairs according to
Prior #3.
3.  For each pair find the midpoint and enforce Prior #4 in the host+sub
catalog.

## Algorithm to identify all pairs whose distance <= D:
    def find_pairs(points, D):
        pairs = []
        with fast3tree(points) as tree:
            for i, p in enumerate(points):
                idx = tree.query_radius(p, D, True, 'index')
                idx = idx[idx > i]
                pairs.extend(((i, j) for j in idx))
        return pairs

## How to assign MW, M31, M33:
1.  Case 1 -- Pairs
    The larger halo in the MW-M31 pair is called M31, and the smaller one
called MW.
2.  Case 2 -- Triplets, M31 is the largest halo
    Assign MW and M31 as in #1. Assign M33 to the largest halo within 0.4 Mpc
of M31.
3.  Case 3 -- Triplets, M31 is the halo with M33
    Find the largest halo within 0.4 Mpc of each of two halos of the pair,
call them A and B.
    The larger one between A and B is assigned to M33.
    The host halo associated with M33 is assigned to M31.
    The other host halo is assigned to MW.

